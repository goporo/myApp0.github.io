{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","character","filter","i","className","ReactDOM","render","document","getElementById"],"mappings":"8MAEMA,EAAc,WAClB,OACE,+BACE,4BACE,oCACA,sCAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACE,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAMR,OAAO,+BAAQJ,IAiBFU,EAdD,SAACX,GACb,IAAQE,EAAmCF,EAAnCE,cAAeQ,EAAoBV,EAApBU,gBAEvB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACER,cAAeA,EACfQ,gBAAiBA,M,OCYVE,E,4MA9CbC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAGPM,MAAQ,EAAKD,a,EACbE,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGZ,EAAOW,K,EAGZE,WAAa,WACX,EAAKpB,MAAMqB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAGrB,WACE,MAAsBS,KAAKR,MAAnBP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAEd,OACE,8BACE,2BAAOe,QAAQ,QAAf,QACA,2BACEC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eAGjB,2BAAOQ,QAAQ,OAAf,OACA,2BACEC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eAEjB,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,kB,GAzCvCO,aCkCJC,E,4MA/Bbd,MAAQ,CACNe,WAAY,I,EAGdR,aAAe,SAACS,GACd,EAAKX,SAAS,CAAEU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BC,O,EAezDpB,gBAAkB,SAACL,GACjB,IAAQwB,EAAe,EAAKf,MAApBe,WAER,EAAKV,SAAS,CACZU,WAAYA,EAAWE,QAAO,SAACD,EAAWE,GACxC,OAAOA,IAAM3B,Q,4CAlBnB,WACE,IAAQwB,EAAeP,KAAKR,MAApBe,WAER,OACE,yBAAKI,UAAU,aACb,kBAAC,EAAD,CACE/B,cAAe2B,EACfnB,gBAAiBY,KAAKZ,kBAExB,kBAAC,EAAD,CAAMW,aAAcC,KAAKD,eAL3B,S,GAZYM,a,MCClBO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ae2324b3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Job</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nconst TableBody = (props) => {\r\n  const rows = props.characterData.map((row, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td>\r\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return <tbody>{rows}</tbody>;\r\n};\r\n\r\nconst Table = (props) => {\r\n  const { characterData, removeCharacter } = props;\r\n\r\n  return (\r\n    <table>\r\n      <TableHeader />\r\n      <TableBody\r\n        characterData={characterData}\r\n        removeCharacter={removeCharacter}\r\n      />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Form extends Component {\r\n  initialState = {\r\n    name: \"\",\r\n    job: \"\",\r\n  };\r\n\r\n  state = this.initialState;\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state);\r\n    this.setState(this.initialState);\r\n  };\r\n\r\n  render() {\r\n    const { name, job } = this.state;\r\n\r\n    return (\r\n      <form>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <label htmlFor=\"job\">Job</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"job\"\r\n          id=\"job\"\r\n          value={job}\r\n          onChange={this.handleChange}\r\n        />\r\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport Form from \"./Form\";\n\nclass App extends Component {\n  state = {\n    characters: [],\n  };\n\n  handleSubmit = (character) => {\n    this.setState({ characters: [...this.state.characters, character] });\n  };\n  render() {\n    const { characters } = this.state;\n\n    return (\n      <div className=\"container\">\n        <Table\n          characterData={characters}\n          removeCharacter={this.removeCharacter}\n        />\n        <Form handleSubmit={this.handleSubmit} />;\n      </div>\n    );\n  }\n  removeCharacter = (index) => {\n    const { characters } = this.state;\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index;\n      }),\n    });\n  };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}